volumes:
  pgtest:
    driver_opts:
      type: tmpfs
      o: "size=100m"
      device: tmpfs

services:
  postgres:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      TZ: 'Europe/Moscow'
      PGTZ: 'Europe/Moscow'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'bot'
    volumes:
      - ./data/.postgresql:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: redis-server --save "" --databases 2 --maxmemory 20mb --maxmemory-policy allkeys-lru --requirepass pass


  # MESSAGE BROKER
  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - '9092:9092'
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: '127.0.0.1'
      KAFKA_ADVERTISED_PORT: '9092'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CREATE_TOPICS: 'report:1:1'
    depends_on:
      - zookeeper
    container_name: example-kafka

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    container_name: finassist-zookeeper


  # LOGS
  filed:
    command: /file.d/file.d --config /config.yaml
    image: ozonru/file.d:latest-linux-amd64
    volumes:
      - ./data/.logs/log.txt:/tmp/logs/log.txt
      - ./data/.logs/offsets.yaml:/tmp/offsets.yaml
      - ./data/filed.yaml:/config.yaml
    links:
      - graylog
    depends_on:
      - graylog

  mongodb:
    image: mongo:3
    volumes:
      - ./data/.mongo:/data/db

  elasticsearch:
    image: elasticsearch:7.17.6
    volumes:
      - ./data/.elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  graylog:
    image: graylog/graylog:4.3
    volumes:
      - ./data/graylog.conf:/usr/share/graylog/data/config/graylog.conf
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - '7555:7555'
      # Syslog TCP
      - '8514:8514'
      # Syslog UDP
      - '8514:8514/udp'
      # GELF TCP
      - '12201:12201'


  # METRICS
  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./data/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - host.docker.internal:host-gateway
  grafana:
    image: grafana/grafana-oss
    ports:
      - '3000:3000'
    volumes:
      - ./data/.grafana:/var/lib/grafana
    links:
      - prometheus


  # TRACING
  jaeger:
    image: jaegertracing/all-in-one:1.18
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411


  # INTEGRATION TESTS DB
  postgres_test:
    image: postgres:15-alpine
    ports: [ '5433:5432' ]
    environment:
      TZ: 'Europe/Moscow'
      PGTZ: 'Europe/Moscow'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'testdb'
    volumes:
      - pgtest:/var/lib/postgresql/data
